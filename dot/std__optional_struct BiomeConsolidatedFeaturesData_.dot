digraph "std::optional<struct BiomeConsolidatedFeaturesData>" {
rankdir = LR
84
84 -> 85
85 -> 86
84 -> 87
87 -> 142

84 [label="std::optional<struct BiomeConsolidatedFeaturesData>",comment="name: \"std::optional<struct BiomeConsolidatedFeaturesData>\", typeName: \"\", id: 84, branchId: 0, recurseId: -1, attributes: 0, notes: \"\""];
85 [label="Has Value",comment="name: \"Has Value\", typeName: \"\", id: 85, branchId: 0, recurseId: -1, attributes: 0, notes: \"If true, follow with appropriate data type, otherwise nothing\""];
86 [label="bool",comment="name: \"bool\", typeName: \"\", id: 86, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
87 [label="Value",comment="name: \"Value\", typeName: \"BiomeConsolidatedFeaturesData\", id: 87, branchId: 0, recurseId: -1, attributes: 256, notes: \"\""];
142 [label="BiomeConsolidatedFeaturesData",comment="name: \"BiomeConsolidatedFeaturesData\", typeName: \"\", id: 142, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
{ rank = max;86;142}

}
