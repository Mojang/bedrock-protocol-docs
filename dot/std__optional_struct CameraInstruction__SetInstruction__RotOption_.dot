digraph "std::optional<struct CameraInstruction::SetInstruction::RotOption>" {
rankdir = LR
34
34 -> 35
35 -> 36
34 -> 37
37 -> 43

34 [label="std::optional<struct CameraInstruction::SetInstruction::RotOption>",comment="name: \"std::optional<struct CameraInstruction::SetInstruction::RotOption>\", typeName: \"\", id: 34, branchId: 0, recurseId: -1, attributes: 0, notes: \"\""];
35 [label="Has Value",comment="name: \"Has Value\", typeName: \"\", id: 35, branchId: 0, recurseId: -1, attributes: 0, notes: \"If true, follow with appropriate data type, otherwise nothing\""];
36 [label="bool",comment="name: \"bool\", typeName: \"\", id: 36, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
37 [label="Value",comment="name: \"Value\", typeName: \"CameraInstruction::SetInstruction::RotOption\", id: 37, branchId: 0, recurseId: -1, attributes: 256, notes: \"\""];
43 [label="CameraInstruction::SetInstruction::RotOption",comment="name: \"CameraInstruction::SetInstruction::RotOption\", typeName: \"\", id: 43, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
{ rank = max;36;43}

}
