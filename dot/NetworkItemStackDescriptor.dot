digraph "NetworkItemStackDescriptor" {
rankdir = LR
18
18 -> 19
19 -> 20
20 -> 21
21 -> 22
20 -> 23
23 -> 24
20 -> 25
25 -> 26
20 -> 27
27 -> 28
20 -> 29
29 -> 30
30 -> 31
29 -> 32
32 -> 33
33 -> 37
20 -> 38
38 -> 39
20 -> 40
40 -> 41
19 -> 42
42 -> 43
43 -> 44

18 [label="NetworkItemStackDescriptor",comment="name: \"NetworkItemStackDescriptor\", typeName: \"\", id: 18, branchId: 0, recurseId: -1, attributes: 0, notes: \"\""];
19 [label="Dependency on 'Item is valid?'",shape=note,comment="name: \"Dependency on 'Item is valid?'\", typeName: \"\", id: 19, branchId: 0, recurseId: -1, attributes: 2, notes: \"\""];
20 [label="If False",shape=diamond,comment="name: \"If False\", typeName: \"\", id: 20, branchId: 0, recurseId: -1, attributes: 4, notes: \"\""];
21 [label="Id",comment="name: \"Id\", typeName: \"\", id: 21, branchId: 0, recurseId: -1, attributes: 0, notes: \"\""];
22 [label="varint",comment="name: \"varint\", typeName: \"\", id: 22, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
23 [label="Stack size",comment="name: \"Stack size\", typeName: \"\", id: 23, branchId: 0, recurseId: -1, attributes: 0, notes: \"\""];
24 [label="unsigned short",comment="name: \"unsigned short\", typeName: \"\", id: 24, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
25 [label="Aux value",comment="name: \"Aux value\", typeName: \"\", id: 25, branchId: 0, recurseId: -1, attributes: 0, notes: \"\""];
26 [label="unsigned varint",comment="name: \"unsigned varint\", typeName: \"\", id: 26, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
27 [label="Include Net Id",comment="name: \"Include Net Id\", typeName: \"\", id: 27, branchId: 0, recurseId: -1, attributes: 0, notes: \"\""];
28 [label="bool",comment="name: \"bool\", typeName: \"\", id: 28, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
29 [label="Dependency on 'Include Net Id'",shape=note,comment="name: \"Dependency on 'Include Net Id'\", typeName: \"\", id: 29, branchId: 0, recurseId: -1, attributes: 2, notes: \"\""];
30 [label="If False",shape=diamond,comment="name: \"If False\", typeName: \"\", id: 30, branchId: 0, recurseId: -1, attributes: 4, notes: \"\""];
31 [label="[No Data]",comment="name: \"[No Data]\", typeName: \"\", id: 31, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
32 [label="If True",shape=diamond,comment="name: \"If True\", typeName: \"\", id: 32, branchId: 1, recurseId: -1, attributes: 4, notes: \"\""];
33 [label="Net Id Variant",comment="name: \"Net Id Variant\", typeName: \"ItemStackNetIdVariant\", id: 33, branchId: 0, recurseId: -1, attributes: 256, notes: \"\""];
37 [label="ItemStackNetIdVariant",comment="name: \"ItemStackNetIdVariant\", typeName: \"\", id: 37, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
38 [label="Block Runtime Id",comment="name: \"Block Runtime Id\", typeName: \"\", id: 38, branchId: 0, recurseId: -1, attributes: 0, notes: \"\""];
39 [label="varint",comment="name: \"varint\", typeName: \"\", id: 39, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
40 [label="User Data Buffer",comment="name: \"User Data Buffer\", typeName: \"\", id: 40, branchId: 0, recurseId: -1, attributes: 0, notes: \"The @ItemInstanceUserData.html#ItemInstanceUserData@  binary blob encoded as a String, so it's unsigned varint length prefixed. Get all your nbt+property bytes, calculate the length, write that length, THEN write the data.\""];
41 [label="string",comment="name: \"string\", typeName: \"\", id: 41, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
42 [label="If True",shape=diamond,comment="name: \"If True\", typeName: \"\", id: 42, branchId: 1, recurseId: -1, attributes: 4, notes: \"\""];
43 [label="Id",comment="name: \"Id\", typeName: \"\", id: 43, branchId: 0, recurseId: -1, attributes: 0, notes: \"Send fixed Id of 0 for invalid item\""];
44 [label="varint",comment="name: \"varint\", typeName: \"\", id: 44, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
{ rank = max;22;24;26;28;31;37;39;41;44}

}
