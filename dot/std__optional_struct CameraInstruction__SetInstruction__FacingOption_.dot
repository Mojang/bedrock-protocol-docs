digraph "std::optional<struct CameraInstruction::SetInstruction::FacingOption>" {
rankdir = LR
46
46 -> 47
47 -> 48
46 -> 49
49 -> 53

46 [label="std::optional<struct CameraInstruction::SetInstruction::FacingOption>",comment="name: \"std::optional<struct CameraInstruction::SetInstruction::FacingOption>\", typeName: \"\", id: 46, branchId: 0, recurseId: -1, attributes: 0, notes: \"\""];
47 [label="Has Value",comment="name: \"Has Value\", typeName: \"\", id: 47, branchId: 0, recurseId: -1, attributes: 0, notes: \"If true, follow with appropriate data type, otherwise nothing\""];
48 [label="bool",comment="name: \"bool\", typeName: \"\", id: 48, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
49 [label="Value",comment="name: \"Value\", typeName: \"CameraInstruction::SetInstruction::FacingOption\", id: 49, branchId: 0, recurseId: -1, attributes: 256, notes: \"\""];
53 [label="CameraInstruction::SetInstruction::FacingOption",comment="name: \"CameraInstruction::SetInstruction::FacingOption\", typeName: \"\", id: 53, branchId: 0, recurseId: -1, attributes: 512, notes: \"\""];
{ rank = max;48;53}

}
